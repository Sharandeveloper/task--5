 1.THE JSON FORMAT RESUME;
{
"basics": {
"name": "Your first and last name",
"label": "",
"picture": "",
"email": "Your email address",
"phone": "A phone number, with any formatting you like. E.g. (555) 555-5555.",
"degree": "",
"website": "Your website URL",
"summary": "A one-sentence to one-paragraph overview text. Do not include any line-breaks.",
"location": {
"address": "Your street address or mailing address",
"postalCode": "Your postal code (ZIP in the U.S.)",
"city": "Your city",
"countryCode": "Your country (e.g. USA)",
"region": "Your region (state in the U.S.)"
},
"profiles": [
{
"network": "A social media or other profile that you would like to include (e.g. LinkedIn, Twitter)",
"username": "Your username on this network",
"url": "A URL to your user profile page"
}
]
},
"work": [


2. JSON ALL FOR LOOPS 
(FOR,FORIN,FOROF,FOR EACH);

The For loop can also be used to alter colors. Consider a situation where you want to choose a particular color for all the anchors of your page. In order to do so, use the following piece of code.
 {% code-block language="js" %}
var elements = document.querySelectorAll("a");
for (var i=0; i<elements.length; i++) {
   elements[i].style.color = "red";

The ‘For In’ Loop
Another way of looping is the For In Loop. Unlike the For Loop, this loop won’t be using a counter. So this makes the whole process even more simple and hassle-free. In fact, the For In Loop is essentially a simplified version of the For Loop.


3. The ForEach() Loop
This method is used for looping through an array element. Here’s an example of this:

{% code-block language="js" %}
var names = ["jerry", "tom", "pluto", "micky", "mini"];
names.forEach(function1);
function function1(currentValue, index) {
   console.log("Index in array is: "+index + " ::  Value is: "+currentValue);
}
‍{% code-block-end %}
 3.DIFFERENT ABOUT THE WINDOW SCREEN AND DOCUMENT IN JAVASCRIPT;
The Browser Object Model contains objects that represent the current browser window or tab. The topmost object in the BOM is the window object representing the window or tab or an iframe sometimes. Window object has properties like browser history, location and the device’s screen etc. In case of multi tab browser, a window object represents a single tab, but some of its properties like innerHeight, innerWidth and methods like resizeTo() will affect the whole browser window.

Document Object Model
When a web page is loaded, the browser creates a Document Object Model of the page. The document object represents the whole html document as a tree of Objects(HTML, HEAD, BODY, and other HTML tags). It is the root element that represents the html document.



}
‍{% code-block-end %}

